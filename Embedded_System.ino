/////////////////////////////////////////////////CHOOSE SHIELD/////////////////////////////////////////////////

#pragma region ShieldSelection

#include "src/lib/shields.h"

#define USING_SHIELD MEGA_OCTA_PTH_MK_I
// #define USING_SHIELD MEGA_STACK_DADOS_ACIONAMENTO_2019

#include "src/lib/pinos.h"

#pragma endregion

/////////////////////////////////////////////////CONFIGURATION/////////////////////////////////////////////////

#pragma region Configurations

#define BaudRate 115200

#define USE_GY80 (0)						//Use GY80 module
#define USE_GY91 (1)						//Use GY91 module

#define SDCard (0)							//Use SD card
#define GPSmode (0)							//Use GPS
#define LoRamode (1)						//Serial mode for transmission on LoRa module
#define TalkingBoard (0)					//When two boards are connected for redundancy system
#define BuZZ (1)							//Buzzer mode
#define ForceSysC (0)

#define PROJECT_NAME "Arace"

/**************************** GY80 ****************************/
#define USE_BMP085 (USE_GY80 || 0)			//Use BMP085 sensor
#define USE_ADXL345 (USE_GY80 || 0)			//Use ADXL345 sensor
#define USE_L3G4200D (USE_GY80 || 0)		//Use L3G4200D sensor
#define USE_HMC5883 (USE_GY80 || 0)			//Use HMC5883 sensor

/**************************** GY91 ****************************/
#define USE_BMP280 (USE_GY91 || 0)			//Use BMP280 sensor
#define USE_MPU9250_ACCEL (USE_GY91 || 0)	//Use MPU9250 sensor, accelerometer
#define USE_MPU9250_GYRO (USE_GY91 || 0)	//Use MPU9250 sensor, gyroscope
#define USE_AK8963 (USE_GY91 || 0)			//Use AK8963 sensor

/************************** 9DoF IMU **************************/
#define USE_BARO (USE_BMP085 || USE_BMP280)				// Use any Barometer
#define USE_ACCEL (USE_ADXL345 || USE_MPU9250_ACCEL)	// Use any Accelerometer
#define USE_GYRO (USE_L3G4200D || USE_MPU9250_GYRO)		// Use any Gyroscope
#define USE_MAGN (USE_HMC5883 || USE_AK8963)			// Use any Magnetometer

/**************************** LoRa ****************************/

#define LoRa_DORJI (LoRamode && 0)		// Dorji LoRa Module (2019 and before)
#define LoRa_E32 (LoRamode && 1)		// E32 LoRa Module (2019 and before)

/*************************** Others ***************************/

#define ApoGee (USE_BARO && 1)				//Detection of apogee
#define PRINT (1)							//Print or not things on Serial
#define RBF (0)								//Revome Before Flight
#define WU (ApoGee && 1)					//Wait Until Directives
#define WUF (WU && 1)						//Wait Until Flight
#define WUPS (WU && 1)						//Wait Until Pressure Stabilize
#define ACT_BUZZER (BuZZ && 0)				//Active buzzer in hardware
#define PSS_BUZZER (BuZZ && 1)				//Passive buzzer in hardware
#define MORSE_MSG (BuZZ && 1)				//Morse beeping
#define BEEPING (BuZZ && 0)					//Buzzer mode
#define BlinkBuzzer (BuZZ && 0)
#define RGB (0)								//RGB LED board
#define DualDeploy (ApoGee && 1)			//Dual Parachute Deployment
#define DELAYED (ApoGee && 1)				//Redundancy mode

#define ELEVATOR (1)

#define PbarT (PRINT && USE_BARO && 1)		//Print barometer temperature data
#define PbarP (PRINT && USE_BARO && 1)		//Print barometer pressure data

#define PaclX (PRINT && USE_ACCEL && 1)		//Print accelerometer X axis data
#define PaclY (PRINT && USE_ACCEL && 1)		//Print accelerometer Y axis data
#define PaclZ (PRINT && USE_ACCEL && 1)		//Print accelerometer Z axis data

#define PgirX (PRINT && USE_GYRO && 1)		//Print gyroscope x axis data
#define PgirY (PRINT && USE_GYRO && 1)		//Print gyroscope Y axis data
#define PgirZ (PRINT && USE_GYRO && 1)		//Print gyroscope Z axis data

#define PmagX (PRINT && USE_MAGN && 1)		//Print magnetometer x axis data
#define PmagY (PRINT && USE_MAGN && 1)		//Print magnetometer Y axis data
#define PmagZ (PRINT && USE_MAGN && 1)		//Print magnetometer Z axis data

#define papgI (PRINT && ApoGee && 1)		//Print MonoDeploy.info of every instance
#define PapgW (PRINT && ApoGee && 1)		//Print apogee information when detected
#define PapgH (PRINT && ApoGee && 1)		//Print altimeter data
#define PapgB (PRINT && ApoGee && 1)		//Print altimeter base
#define PapgP (PRINT && ApoGee && 1)		//Print apogee information
#define PapgA (PRINT && ApoGee && 1)		//Print apogee alpha
#define PapgS (PRINT && ApoGee && 1)		//Print apogee sigma
#define PapgM (PRINT && ApoGee && 0)		//Print apogee sigma max

#define Pgps (PRINT && GPSmode && 1)		//Print GPS informations
#define Psep (PRINT && 0)					//Print visual separator

#define Tcom (PRINT && 1)					//Print time counter
#define Lcom (PRINT && 0)					//Print loop counter
#define Ncom (PRINT && 0)					//Print eachN counter
#define Ps_n (PRINT && 0)					//Print SYSTEM_n

#define PWMapg (ApoGee && 1)				//Show the apogee coefficient in a LED

#define PERF_Tcom_print (0)				//Print time counter every 100 iterations (for performance tests)

#define COMmode (PRINT || LoRamode)
#define WIREmode (USE_BARO || USE_ACCEL || USE_GYRO || USE_MAGN)
#define SYSTEM_n (uint8_t(SDCard)+uint8_t(USE_BARO)+uint8_t(USE_ACCEL)+uint8_t(USE_GYRO)+uint8_t(USE_MAGN)+uint8_t(GPSmode)+uint8_t(ApoGee)+uint8_t(DualDeploy)+uint8_t(DELAYED)+uint8_t(DualDeploy && DELAYED))

#pragma endregion

/////////////////////////////////////////////////////objects///////////////////////////////////////////////////

#pragma region Declarations

#include "src/lib/Classes.h"

#if USE_BARO
#define baro Barometer
#define MM_baro M_baro
#if USE_BMP085
#include "src/lib/BMP085/BMP085.h" // Barometro BMP085
BMP085 baro;									//Barometer object declaration
#elif USE_BMP280
#include "src/lib/BMP280/BMP280.h" // Barometro BMP280
BMP280 baro;									//Barometer object declaration
#endif // USE_BMP085 / USE_BMP280
//MovingAverage MM_baro[2]{ (2),(2) };		//Array declaration of the moving average filter objects
float MM_baro[2]{};
#endif // USE_BARO

#if ApoGee
#include "src/lib/Apogeu/Apogeu.h" // Processamento de altitude e deteccao de apogeu
#include "src/lib/MonoDeploy/MonoDeploy.h" // Acionamento de paraquedas simples
#define apg Apogee
Apogeu apg(10, 15, 50);						//Apogee checker object declaration
#define LapsMaxT 5							//Maximum time of delay until emergency state declaration by the delay in sensor response. (seconds)
#define mainN MainNormal
#define EM_mainN_DELAY 60					// Seconds before forced deployment

#if DualDeploy
#if ELEVATOR
#define p2h 15								//Height to main parachute
#else
#define p2h 450								//Height to main parachute
#endif // ELEVATOR

#define drogN DrogueNormal
#define EM_drogN_DELAY 10					// Seconds before forced deployment
#endif // DualDeploy

#if DELAYED
#define sysDelay 2.5
#define mainB MainBackup
#define EM_mainB_DELAY 65					// Seconds before forced deployment


#if DualDeploy
#if ELEVATOR
#define p2h_D 10							//Height to main parachute on redundance mode
#else
#define p2h_D 400							//Height to main parachute on redundance mode
#endif // ELEVATOR

#define drogB DrogueBackup
#define EM_drogB_DELAY 15					// Seconds before forced deployment
#endif // DualDeploy

#endif // DELAYED


// #define pins_drogN (36, 68)  /*act1*/
// #define pins_drogB (61, 62)  /*act2*/
// //#define pins_mainN (8, 40, 20, 1)  /*act3*/
// #define pins_mainN (46, 56)  /*act3*/
// #define pins_mainB (55, 58)  /*act4*/

// #define pins_drogN (A0, A1) /*act1*/
// #define pins_drogB (A2, A3) /*act2*/
// #define pins_mainN (A4, A5) /*act3*/
// #define pins_mainB (A6, A7) /*act4*/

#define pins_drogN (IGN_1, HEAL_1) /*act1*/
#define pins_drogB (IGN_2, HEAL_2) /*act2*/
#define pins_mainN (IGN_3, HEAL_3) /*act3*/
#define pins_mainB (IGN_4, HEAL_4) /*act4*/


struct Recovery
{
	static MonoDeploy mainN;

#if DualDeploy
	static MonoDeploy drogN;
#endif // DualDeploy

#if DELAYED
	static MonoDeploy mainB;

#if DualDeploy
	static MonoDeploy drogB;
#endif // DualDeploy

#endif // DELAYED
	static bool begin()
	{
		bool aux = true;
		aux &= mainN.begin();

#if DualDeploy
		aux &= drogN.begin();
#endif // DualDeploy


#if DELAYED
		aux &= mainB.begin();

#if DualDeploy
		aux &= drogB.begin();
#endif // DualDeploy

#endif // DELAYED


		return aux;
	}
	static void emergency(bool state)
	{
		if(state) MonoDeploy::sealApogee(true);
		mainN.emergency(state, EM_mainN_DELAY);

		#if DualDeploy
				drogN.emergency(state, EM_drogN_DELAY);
		#endif // DualDeploy

		#if DELAYED
				mainB.emergency(state, EM_mainB_DELAY);

		#if DualDeploy
				drogB.emergency(state, EM_drogB_DELAY);
		#endif // DualDeploy

		#endif // DELAYED
	}
	static bool getGlobalState()
	{
		bool aux = false;
		aux |= mainN.getGlobalState();

#if DualDeploy
		aux |= drogN.getGlobalState();
#endif // DualDeploy

#if DELAYED
		aux |= mainB.getGlobalState();

#if DualDeploy
		aux |= drogB.getGlobalState();
#endif // DualDeploy

#endif // DELAYED
		return aux;
	}
	static void refresh()
	{
		mainN.refresh();

#if DualDeploy
		drogN.refresh();
#endif // DualDeploy

#if DELAYED
		mainB.refresh();

#if DualDeploy
		drogB.refresh();
#endif // DualDeploy

#endif // DELAYED
	}
	static void resetTimer()
	{
		MonoDeploy::resetTimer();
	}
	static void sealApogee(bool apg)
	{
		MonoDeploy::sealApogee(apg);
	}
	static int putHeight(float H)
	{
		MonoDeploy::putHeight(H);
	}
	static bool getApogee()
	{
		return MonoDeploy::getApogee();
	}
} rec;

MonoDeploy Recovery::mainN pins_mainN;

#if DualDeploy
MonoDeploy Recovery::drogN pins_drogN;
#endif // DualDeploy


#if DELAYED
MonoDeploy Recovery::mainB pins_mainB;

#if DualDeploy
MonoDeploy Recovery::drogB pins_drogB;
#endif // DualDeploy

#endif // DELAYED

#endif // ApoGee

#if WUF

#if ELEVATOR
#define WUFheigh 5
#else
#define WUFheigh 50
#endif // ELEVATOR

#endif // WUF

#if WUPS

#if ELEVATOR
#define WUPSdelay 3
#else
#define WUPSdelay 10
#endif // ELEVATOR

#endif // WUPS

#if USE_ACCEL
#define accel Accelerometer
#define MM_accel M_accel
#if USE_ADXL345
#include "src/lib/ADXL345/ADXL345.h" // Accelerometer ADXL345
ADXL345 accel;									//Accelerometer object declaration
#elif USE_MPU9250_ACCEL
#include "src/lib/MPU9250_ACCEL/MPU9250_ACCEL.h" // Accelerometer MPU9250_ACCEL
MPU9250_ACCEL accel(16);									//Accelerometer object declaration
#endif // USE_ADXL345 / USE_MPU9250_ACCEL
//MovingAverage MM_accel[3]{ (5),(5),(5) };	//Array declaration of the moving average filter objects
float MM_accel[3]{};
#endif // USE_ACCEL

#if USE_GYRO
#define giro Gyroscope
#define MM_giro M_giro
#if USE_L3G4200D
#include "src/lib/L3G4200D/L3G4200D.h" // Gyroscope L3G4200D
L3G4200D giro(2000);							//Gyroscope object declaration
#elif USE_MPU9250_GYRO
#include "src/lib/MPU9250_GYRO/MPU9250_GYRO.h" // Gyroscope MPU9250_GYRO
MPU9250_GYRO giro(2000);							//Gyroscope object declaration
#endif // USE_L3G4200D / USE_MPU9250_GYRO
//MovingAverage MM_giro[3]{ (5),(5),(5) };	//Array declaration of the moving average filter objects
float MM_giro[3]{};
#endif // USE_GYRO

#if USE_MAGN
#define magn Magnetometer
#define MM_magn M_magn
#if USE_HMC5883
#include "src/lib/HMC5883/HMC5883.h" // Magnetometer HMC5883
HMC5883 magn;									//Magnetometer object declaration
#elif USE_AK8963
#include "src/lib/AK8963/AK8963.h" // Magnetometer AK8963
AK8963 magn;									//Magnetometer object declaration
#endif // USE_HMC5883 / USE_AK8963
//MovingAverage MM_magn[3]{ (5),(5),(5) };	//Array declaration of the moving average filter objects
float MM_magn[3]{};
#endif // USE_MAGN

#if SDCard

#include <SPI.h>
#include <SD.h>
#include "src/lib/SDCH/SDCH.h" // Auxiliar para gerenciamento de cartao SD

#define SDC SecureDigitalCard
SDCH SDC(SD_CS_PIN, PROJECT_NAME);						//Declaration of object to help SD card file management
#endif // SDCard

#if GPSmode
#include "src/lib/GyGPS/GyGPS.h" // Auxiliar para GPS
#define GpS GlobalPSystem
GyGPS GpS(Serial1, 0);
#endif // GPSmode

#if LoRamode
#if LoRa_DORJI
#define LoRaDelay 1.5
#elif LoRa_E32
#define LoRaDelay 0.5
#else
#define LoRaDelay 5
#endif // LoRa_DORJI || LoRa_E32
#define LoRa LongRange
#define LRutil LRutilitario
HardwareSerial &LoRa(Serial3);
Helpful LRutil;								//Declaration of helpful object to telemetry system
#define LoRaBaudRate 9600
#if LoRa_E32
#define M0_LORA_PIN 12 // Pinos adicionais do LoRa
#define M1_LORA_PIN 11 // Pinos adicionais do LoRa
#define AUX_LORA_PIN A8 // Pinos adicionais do LoRa
#endif // LoRa_E32
#endif // LoRamode

#if TalkingBoard
#define Talk Talking
ComProtocol Talk(Serial2, 9600);			//Declaration of communication protocol object
#endif // TalkingBoard

#if ((PRINT) || (PERF_Tcom_print))
#define Serial Serial
#endif // ((PRINT) || (PERF_Tcom_print))

#define Gutil utilitario
Helpful Gutil;								//Declaration of helpful object to general cases

#if RBF
#define rbfHelper ReBeFlight
#define RBFpin 2							//Pin that the RBF system is connected
#endif // RBF

#if RBF || WUF || ForceSysC
unsigned short sysC = 0;
#endif // RBF || WUF || ForceSysC


#if BuZZ

#if BlinkBuzzer
#define buzzPin LED_BUILTIN
#define buzzCmd HIGH
#else
#define buzzCmd LOW							//Buzzer is on in high state
// #define buzzPin A0							//Pin that the buzzer is connected
// #define buzzPin 49							//Pin that the buzzer is connected
#endif // BlinkBuzzer
#endif // BuZZ
#if MORSE_MSG
#include "src/lib/Morse/Morse.h"
Morse mensageiro(buzzPin, String("^ ") + PROJECT_NAME);
// Morse mensageiro(buzzPin, PROJECT_NAME);
// MorseAtvBzz mensageiro(buzzPin, buzzCmd, PROJECT_NAME);
// MorseAtvBzz mensageiro(buzzPin, buzzCmd, "a 1 - . ~ . ^ . < . = . > . [ . ] . { . }");
Helpful Mutil;
#endif // MORSE_MSG
#if BEEPING
#define holdT .1
Helpful beeper;
#endif // BEEPING

#if RGB
#define rPin 7
#define gPin 6
#define bPin 5
#define rgbCmd HIGH
#endif // RGB

#if COMmode
template <typename T> void transmit(T message);
template <typename T> void transmitln(T message);
template <typename T, typename R> void transmit(T message, R value);
template <typename T, typename R> void transmitln(T message, R value);
#endif // COMmode

#pragma endregion


/////////////////////////////////////////////////////SETUP/////////////////////////////////////////////////////

#pragma region Setup
void setup()
{
#if PWMapg
	pinMode(PWMout, OUTPUT);
#endif // PWMapg

#if RBF
	pinMode(RBFpin, INPUT_PULLUP);
#endif // RBF

#if RGB
	pinMode(rPin, OUTPUT);
	pinMode(gPin, OUTPUT);
	pinMode(bPin, OUTPUT);
	digitalWrite(rPin, !rgbCmd);
	digitalWrite(gPin, !rgbCmd);
	digitalWrite(bPin, !rgbCmd);
#endif // RGB

#if ApoGee
	rec.begin();
#if DualDeploy
	rec.mainN.setHeightCmd(p2h);
#endif // DualDeploy

#endif // ApoGee

#if DELAYED
#if DualDeploy
	rec.mainB.setHeightCmd(p2h_D);
#else
	rec.mainB.setDelayCmd(sysDelay);
#endif // !DualDeploy

#if DualDeploy
	rec.drogB.setDelayCmd(sysDelay);
#endif // DualDeploy

#endif // DELAYED


#if ACT_BUZZER
	pinMode(buzzPin, OUTPUT);
	digitalWrite(buzzPin, !buzzCmd);
#endif // ACT_BUZZER
#if MORSE_MSG
	mensageiro.setup();
	mensageiro.updateMorse();
#endif // MORSE_MSG
#if BEEPING
	beep();
#endif // BEEPING


#if ((PRINT) || (PERF_Tcom_print))
	Serial.begin(BaudRate);
	Serial.println();
#if Ps_n
	Serial.print(F("System number: "));
	Serial.println(SYSTEM_n);
#endif // Ps_n

#endif // Serial

#if LoRamode
#if LoRa_E32
	pinMode(M0_LORA_PIN,OUTPUT); digitalWrite(M0_LORA_PIN,LOW);
	pinMode(M1_LORA_PIN,OUTPUT); digitalWrite(M1_LORA_PIN,LOW);
#endif // LoRa_E32
	LoRa.begin(LoRaBaudRate);
#endif // LoRamode

#if GPSmode
	GpS.begin();
	GpS.util.forT(60);
	if (GpS)
	{
		if (GpS.util.oneTime())
		{
#if COMmode
			transmit(F("GPS ok "));
			transmit(GpS.getLatitude(), 6);
			transmit(F(", "));
			transmit(GpS.getLongitude(), 6);
#endif // COMmode
		}
	}
	else
	{
#if COMmode
		transmitln(F("GPS err, waiting signal"));
#endif // COMmode
	}
#endif // GPSmode

#if WIREmode
	Wire.begin();
#endif // WIREmode

#if USE_BARO
	baro.begin();
	if (baro)
	{
#if ApoGee
		for (short i = 0; i < 100; i++) if (baro) apg.addZero(baro.getPressure());
#endif // ApoGee
#if COMmode
		transmit(F("Baro ok "));
#endif // COMmode

#if PapgB
		Serial.println(apg.getZero());
#elif PRINT
		Serial.println();
#endif // PRINT

#if LoRamode
#if ApoGee
		LoRa.println(apg.getZero());
#endif // ApoGee
		LoRa.println();
#endif // LoRamode

	}
	else
	{
#if COMmode
		transmitln(F("Baro err"));
#endif // COMmode
	}
#endif // USE_BARO

#if USE_ACCEL
	accel.begin();
	if (accel)
	{
#if COMmode
		transmitln(F("Accel ok"));
#endif // COMmode
	}
	else
	{
#if COMmode
		transmitln(F("Accel err"));
#endif // COMmode
	}
#endif // USE_ACCEL

#if USE_GYRO
	giro.begin();
	if (giro)
	{
#if COMmode
		transmitln(F("Giro ok"));
#endif // COMmode
	}
	else
	{
#if COMmode
		transmitln(F("Giro err"));
#endif // COMmode
	}
#endif // USE_GYRO

#if USE_MAGN
	magn.begin();
	if (magn)
	{
#if COMmode
		transmitln(F("Magn ok"));
#endif // COMmode
	}
	else
	{
#if COMmode
		transmitln(F("Magn err"));
#endif // COMmode
	}
#endif // USE_MAGN

#if ApoGee && COMmode
	transmitln(rec.mainN.info() ? F("IgnMainN ok") : F("IgnMainN err"));

#if DualDeploy
	transmitln(rec.drogN.info() ? F("IgnDrogN ok") : F("IgnDrogN err"));
#endif // DualDeploy

#if DELAYED
	transmitln(rec.mainB.info() ? F("IgnMainB ok") : F("IgnMainB err"));

#if DualDeploy
	transmitln(rec.drogB.info() ? F("IgnDrogB ok") : F("IgnDrogB err"));
#endif // DualDeploy

#endif // DELAYED

#endif // ApoGee && COMmode


#if SDCard
	SDC.begin();
	if (SDC)
	{
#if COMmode
		transmit(F("SD start OK "));
		transmitln(SDC.getFname());
#endif // COMmode

		//////////////////File Header//////////////////

#if ApoGee
		SDC.theFile.print(F("Start at: "));
		SDC.theFile.print(apg.getZero());
		SDC.theFile.println('m');
#endif // ApoGee

		///////////////////////////////////////////////

		SDC.theFile.println(F(
			"temp\t"
#if USE_ACCEL
			"\taccel\t\t"
#endif // USE_ACCEL
#if USE_GYRO
			"\tgiro\t\t"
#endif // USE_GYRO
#if USE_MAGN
			"\tmag\t\t"
#endif // USE_MAGN
#if USE_BARO
			"\tbaro\t\t"
#endif // USE_BARO
#if ApoGee
			"\t"
#endif // ApoGee
#if GPSmode
			"\t\t\tGPS\t\t\t"
#endif // GPSmode
		));

		///////////////////////////////////////////////

		SDC.theFile.println(F(
			"seg\t"
#if USE_ACCEL
			"X\tY\tZ\t"
#endif // USE_ACCEL
#if USE_GYRO
			"X\tY\tZ\t"
#endif // USE_GYRO
#if USE_MAGN
			"X\tY\tZ\t"
#endif // USE_MAGN
#if USE_BARO
			"C\tPascal\t"
#endif // USE_BARO
#if ApoGee
			"m\t"
#endif // ApoGee
#if GPSmode
			"Latitude\tLongitude\tAltutude (m)\tspeed\tSat\tPrec\t"
#endif // GPSmode
		));

		///////////////////////////////////////////////

		SDC.close();
	}
	else
	{

#if COMmode
		transmitln(F("SD err"));
#endif // COMmode
	}
#endif // SDCard

	////////////////RBF directive////////////////

#if RBF
	RemoveBefore();
#endif // RBF

	////////////////RBF directive////////////////


#if PbarT || PbarP || PaclX || PaclY || PaclZ || PgirX || PgirY || PgirZ || PmagX || PmagY || PmagZ || PapgW || PapgH || PapgP || PapgA || PapgS || PapgM || Pgps || Psep || Tcom || Lcom || PERF_Tcom_print
	Serial.println(F(
#endif // PbarT || PbarP || PaclX || PaclY || PaclZ || PgirX || PgirY || PgirZ || PmagX || PmagY || PmagZ || PapgW || PapgH || PapgP || PapgA || PapgS || PapgM || Pgps || Psep || Tcom || Lcom || PERF_Tcom_print
#if Lcom
	"loop\t"
#endif // Lcom

#if PERF_Tcom_print
	"temp\t"
#endif // PERF_Tcom_print

#if Tcom
	"temp\t"
#endif // Tcom


#if PaclX || PaclY || PaclZ
	"accel"
#endif // PaclX || PaclY || PaclZ
#if PaclX
	"\t"
#endif // PaclX
#if PaclY
	"\t"
#endif // PaclY
#if PaclZ
	"\t"
#endif // PaclZ


#if PgirX || PgirX || PgirX
	"giro"
#endif // PgirX || PgirX || PgirX
#if PgirX
	"\t"
#endif // PgirX
#if PgirY
	"\t"
#endif // PgirY
#if PgirZ
	"\t"
#endif // PgirZ


#if PmagX || PmagY || PmagZ
	"mag"
#endif // PmagX || PmagY || PmagZ
#if PmagX
	"\t"
#endif // PmagX
#if PmagY
	"\t"
#endif // PmagY
#if PmagZ
	"\t"
#endif // PmagZ


#if PbarT || PbarP
	"baro"
#endif // PbarT || PbarP
#if PbarT
	"\t"
#endif // PbarT
#if PbarP
	"\t"
#endif // PbarP

#if PapgH
	"\t"
#endif // PapgH
#if PapgP
	"\t\t"
#endif // PapgP
#if PapgA
	"\t"
#endif // PapgA
#if PapgS
	"\t"
#endif // PapgS
#if PapgM
	"\t"
#endif // PapgM

#if Pgps
	"\t\t\tGPS\t\t\t"
#endif // Pgps

#if PbarT || PbarP || PaclX || PaclY || PaclZ || PgirX || PgirY || PgirZ || PmagX || PmagY || PmagZ || PapgW || PapgH || PapgP || PapgA || PapgS || PapgM || Pgps || Psep || Tcom || Lcom || PERF_Tcom_print
	));
	Serial.println(F(
#endif // PbarT || PbarP || PaclX || PaclY || PaclZ || PgirX || PgirY || PgirZ || PmagX || PmagY || PmagZ || PapgW || PapgH || PapgP || PapgA || PapgS || PapgM || Pgps || Psep || Tcom || Lcom || PERF_Tcom_print
#if Lcom
	"\t"
#endif // Lcom

#if PERF_Tcom_print
	"s\t"
#endif // PERF_Tcom_print

#if Tcom
	"s\t"
#endif // Tcom


#if PaclX
	"X\t"
#endif // PaclX
#if PaclY
	"Y\t"
#endif // PaclY
#if PaclZ
	"Z\t"
#endif // PaclZ


#if PgirX
	"X\t"
#endif // PgirX
#if PgirY
	"Y\t"
#endif // PgirY
#if PgirZ
	"Z\t"
#endif // PgirZ


#if PmagX
	"X\t"
#endif // PmagX
#if PmagY
	"Y\t"
#endif // PmagY
#if PmagZ
	"Z\t"
#endif // PmagZ


#if PbarT
	"C\t"
#endif // PbarT
#if PbarP
	"Pascal\t"
#endif // PbarP

#if PapgH
	"m\t"
#endif // PapgH
#if PapgP
	"Max h\tMax t\t"
#endif // PapgP
#if PapgA
	"Alpha\t"
#endif // PapgA
#if PapgS
	"Sigma\t"
#endif // PapgS
#if PapgM
	"Max S\t"
#endif // PapgM

#if Pgps
	"Latitude\tLongitude\tAltitude\tSpeed (m/s)\tSat\tPrec\t"
#endif // Pgps

#if PbarT || PbarP || PaclX || PaclY || PaclZ || PgirX || PgirY || PgirZ || PmagX || PmagY || PmagZ || PapgW || PapgH || PapgP || PapgA || PapgS || PapgM || Pgps || Psep || Tcom || Lcom || PERF_Tcom_print
	));
#endif // PbarT || PbarP || PaclX || PaclY || PaclZ || PgirX || PgirY || PgirZ || PmagX || PmagY || PmagZ || PapgW || PapgH || PapgP || PapgA || PapgS || PapgM || Pgps || Psep || Tcom || Lcom || PERF_Tcom_print

#if SDCard
	SDC.util.begin();
#endif // SDCard

	////////////////WUF directive////////////////

#if WUF
	WaitUntilFlight(WUFheigh);
#if COMmode
	transmit(F("LiftOff confirmed"));
#endif // COMmode
#endif // WUF

	////////////////WUF directive////////////////

	Gutil.begin();

#if LoRamode
	LRutil.begin();
#endif // LoRamode

#if ApoGee
	apg.resetTimer();
	rec.resetTimer();
#endif // ApoGee

#if WUPS
	WaitUntilPressureStabilize(WUPSdelay);
#if COMmode
	transmit(F("Pressure Stabilize timer expired"));
#endif // COMmode
#endif // WUPS

}
#pragma endregion

/////////////////////////////////////////////////////LOOP//////////////////////////////////////////////////////

#pragma region Loop
void loop()
{
#if RBF || WUF || ForceSysC
	sysC = 0;
#endif // RBF || WUF || ForceSysC

	Gutil.counter();
	readEverything();

#if ApoGee
	apg.calcAlt(baro.getPressure());
	rec.emergency(baro.getTimeLapse() > 1000000 * LapsMaxT);
	if (rec.getGlobalState())
	{
		apg.apgSigma();
		apg.apgAlpha();
		rec.sealApogee(apg.getApogeu(0.8f));
		rec.putHeight(apg.getAltitude());
		rec.refresh();
#if PapgM
		Gutil.comparer(apg.getSigma());
#endif // PapgM
		if (rec.getApogee()) Gutil.mem = 1;
	}
	else {
#if MORSE_MSG
		if(Mutil.oneTime())
		{
			mensageiro.msgAux = F(". ~ . ^ . < . = . > . [ . ] . { . } A ");
			mensageiro.msgAux += String(apg.getApgPt());
			mensageiro.msgAux += F(" m");
			mensageiro.setNextMessage(mensageiro.msgAux);
			mensageiro.msgAux = "";
		}
		mensageiro.updateMorse();
#endif // MORSE_MSG
#if BEEPING
		beep(SYSTEM_n); //rec
#endif // BEEPING
	}
#endif // ApoGee
#if PWMapg
	analogWrite(PWMout, (char)(apg.getSigma() * 255));
#endif // PWMapg

#if ((PRINT) || (PERF_Tcom_print))
	SerialSend();
#endif // ((PRINT) || (PERF_Tcom_print))

#if SDCard
	SDSend();
#endif // SDCard

#if LoRamode
	LoRaSend();
#endif // LoRamode

#if MORSE_MSG && ForceSysC
	mensageiro.updateMorse();
#endif // MORSE_MSG
#if BEEPING && ForceSysC
	beep(sysC);
#elif BEEPING && !WUF && !RBF && !ApoGee
	beep(1);
#endif // BEEPING && !WUF && !RBF && !ApoGee
}
#pragma endregion

//////////////////////////////////////////////////////RBF//////////////////////////////////////////////////////

#if RBF
inline void RemoveBefore()
{
	bool rbf = 0;
	Helpful rbfHelper;
	do
	{
		sysC = 0;
		readEverything();
		rbf = digitalRead(RBFpin);
		if (rbfHelper.oneTime())
		{
#if PRINT
			Serial.print(sysC);
			Serial.print(F(" parts of "));
			Serial.print(SYSTEM_n);
			Serial.print(F(" working, waiting...\t"));
#if USE_BARO
			Serial.print(baro.getTemperature());
			Serial.print(F(" "));
			Serial.write(0xB0);
#endif // USE_BARO
#if GPSmode
			Serial.print(F("C\tLat: "));
			Serial.print(GpS.getLatitude(), 6);
			Serial.print(F("\tLon: "));
			Serial.print(GpS.getLongitude(), 6);
			Serial.print(F("\t"));
			Serial.print(GpS.getDay());
			Serial.print('/');
			Serial.print(GpS.getMonth());
			Serial.print('\t');
			Serial.print(GpS.getHour());
			Serial.print(':');
			Serial.print(GpS.getMinute());
			Serial.print(':');
			Serial.print(GpS.getSecond());
#endif // GPSmode

			Serial.println();

#endif // PRINT
		}
		else if (rbfHelper.eachT(2)) rbfHelper.oneTimeReset();
#if LoRamode
		LoRaSend();
#endif // LoRamode

#if BuZZ
		///////////////////////////////////////

		beep(sysC);

		///////////////////////////////////////

#endif // BuZZ

	} while (!rbf);
#if BuZZ
	beep();
#endif // BuZZ
}
#endif // RBF

//////////////////////////////////////////////////////WU//////////////////////////////////////////////////////

#if WU
inline void WaitUntil()
{
	sysC = 0;
	#if MORSE_MSG
		if(!mensageiro.getQuiet()) mensageiro.msgAux = "";
	#endif // MORSE_MSG
			Gutil.counter();
			readEverything();

	#if ApoGee
			apg.calcAlt(baro.getPressure());
			apg.apgSigma();
			apg.apgAlpha();
	#if PapgM
			Gutil.comparer(apg.getSigma());
	#endif // PapgM
	#endif // ApoGee
	#if PWMapg
			analogWrite(PWMout, (char)(apg.getSigma() * 255));
	#endif // PWMapg

	#if ((PRINT) || (PERF_Tcom_print))
			SerialSend();
	#endif // ((PRINT) || (PERF_Tcom_print))

	#if SDCard
			SDSend();
	#endif // SDCard

	#if LoRamode
			LoRaSend();
	#endif // LoRamode
}
#endif // WU

#if WUF
inline void WaitUntilFlight(float minHeight)
{
	do
	{
		WaitUntil();

#if MORSE_MSG
		if(Mutil.oneTime()) if(mensageiro.msgAux.length() > 0) mensageiro.setNextMessage("~ ~ ~ "+mensageiro.msgAux);
		if(mensageiro.updateMorse()) Mutil.oneTimeReset();
#endif // MORSE_MSG
#if BEEPING
		beep(sysC);
#endif // BEEPING

	}
	while (abs(apg.getAltitude()) < minHeight && !(baro.getTimeLapse() > 1000000 * LapsMaxT));
#if MORSE_MSG
	mensageiro.setQuiet();
	Mutil.oneTimeReset();
#endif // MORSE_MSG
#if BEEPING
	beep();
#endif // BEEPING
}
#endif // WUF

#if WUPS
inline void WaitUntilPressureStabilize(float waitTime) {
	Gutil.forT(waitTime);
	while (Gutil.forT())
	{
		WaitUntil();
	}
	// Ensure that apogee point was not given during pressure anomaly
	apg.resetAptPt();
}
#endif // WUPS

//////////////////////////////////////////////////////SPT//////////////////////////////////////////////////////

#if ((PRINT) || (PERF_Tcom_print))
inline void SerialSend()
{

#if Ncom
	if (Gutil.eachN(100))
	{
		Serial.print(Gutil.getCount());
		Serial.print('\t');
		float T = Gutil.lapse();
		Serial.print(T, 5);
		Serial.print('\t');
		Serial.println(1 / T, 5);
	}
	else
	{
		Gutil.lapse();
	}
#endif // Ncom

#if Lcom
	Serial.print(Gutil.getCount());
	Serial.print(F(":\t"));
#endif // Lcom

#if PERF_Tcom_print // Print elapsed iteration time every 100 iterations, for performance tests only
	static Helpful G;
	static float a;

	float b= Gutil.sinceBegin();

	//Serial.print((b-a)*500, 3);
	if ((b - a) * 100 > 1) Serial.println(G.lapse(),6);
	else G.lapse();
	a = b;
#endif // PERF_Tcom_print

#if Tcom
	Serial.print(Gutil.sinceBegin());
	Serial.print('\t');
#endif // Tcom

	////////////////////////////////////////////////////
#if Psep && (PaclX || PaclY || PaclZ)
	Serial.print('|');
#endif // Psep && (PaclX || PaclY || PaclZ)
#if PaclX
	Serial.print(MM_accel[0], 3);
	Serial.print('\t');
#endif // PaclX

#if PaclY
	Serial.print(MM_accel[1], 3);
	Serial.print('\t');
#endif // PaclY

#if PaclZ
	Serial.print(MM_accel[2], 3);
	Serial.print('\t');
#endif // PaclZ

	/////////////////////////////////////////////////////
#if Psep && (PgirX || PgirY || PgirZ)
	Serial.print('|');
#endif // Psep && (PgirX || PgirY || PgirZ)
#if PgirX
	Serial.print(MM_giro[0], 1);
	Serial.print('\t');
#endif // PgirX

#if PgirY
	Serial.print(MM_giro[1], 1);
	Serial.print('\t');
#endif // PgirY

#if PgirZ
	Serial.print(MM_giro[2], 1);
	Serial.print('\t');
#endif // PgirZ

	////////////////////////////////////////////////////
#if Psep && (PmagX || PmagY || PmagZ)
	Serial.print('|');
#endif // Psep && (PmagX || PmagY || PmagZ)
#if PmagX
	Serial.print(MM_magn[0], 1);
	Serial.print('\t');
#endif // PmagX
#if PmagY
	Serial.print(MM_magn[1], 1);
	Serial.print('\t');
#endif // PmagY
#if PmagZ
	Serial.print(MM_magn[2], 1);
	Serial.print('\t');
#endif // PmagZ

	////////////////////////////////////////////////////
#if Psep && (PbarT || PbarP)
	Serial.print('|');
#endif // Psep && (PbarT || PbarP)
#if PbarT
	Serial.print(MM_baro[0], 1);
	Serial.print('\t');
#endif // PbarT
#if PbarP
	Serial.print(MM_baro[1], 1);
	Serial.print('\t');
#endif // PbarP

	/////////////////////////////////////////////////////
#if Psep && PapgH
	Serial.print('|');
#endif // Psep && PapgH
#if PapgH
	Serial.print(apg.getAltitude());
	Serial.print('\t');
#endif // PapgH

#if Psep && PapgP
	Serial.print('|');
#endif // Psep && PapgP
#if PapgP
	Serial.print(apg.getApgPt());
	Serial.print('\t');
	Serial.print(apg.getApgTm());
	Serial.print('\t');
#endif // PapgP

#if Psep && (PapgA || PapgS)
	Serial.print('|');
#endif // Psep
#if PapgA
	Serial.print(apg.getAlpha());
	Serial.print('\t');
#endif // PapgA
#if PapgS
	Serial.print(apg.getSigma(), 7);
	Serial.print('\t');
#endif // PapgS


	/////////////////////////////////////////////////////
#if Psep && PapgM
	Serial.print('|');
#endif // Psep && PapgM
#if PapgM
	Serial.print(Gutil.getMax(), 5);
	Serial.print('\t');
#endif // PapgM



#if Pgps
#if Psep
	Serial.print('|');
#endif // Psep
	Serial.print(GpS.getLatitude(), 6);
	Serial.print('\t');
	Serial.print(GpS.getLongitude(), 6);
	Serial.print('\t');
	Serial.print(GpS.getAltitude());
	Serial.print('\t');
	Serial.print(GpS.getMps(), 3);
	Serial.print('\t');
	Serial.print(GpS.getSatellites());
	Serial.print('\t');
	Serial.print(GpS.getPrecision());
	Serial.print('\t');
	Serial.print(GpS.getChars());
	Serial.print('\t');
	Serial.print(GpS.getYear());
	Serial.print('/');
	Serial.print(GpS.getMonth());
	Serial.print('/');
	Serial.print(GpS.getDay());
	Serial.print('\t');
	Serial.print(GpS.getHour());
	Serial.print(':');
	Serial.print(GpS.getMinute());
	Serial.print(':');
	Serial.print(GpS.getSecond());
	Serial.print('\t');
	Serial.print(GpS.getKph());
	Serial.print('\t');
	Serial.print(GpS.getMps());
	Serial.print('\t');
#endif // Pgps
#if PapgW
	if (Gutil.mem)
	{
		Serial.print(F("A: "));
		Serial.print(apg.getApgPt());
		Serial.print(F(" m\tT:"));
		Serial.print(apg.getApgTm());
		Serial.print(F(" s\t"));
	}
#if COMmode
	if (rec.getGlobalState())
	{
		if (rec.mainN.getState(0)) transmit(F("Act MainN\t"));

#if DualDeploy
		if (rec.drogN.getState(0)) transmit(F("Act DrogueN\t"));
#endif // DualDeploy

#if DELAYED
		if (rec.mainB.getState(0)) transmit(F("Act MainB\t"));

#if DualDeploy
		if (rec.drogB.getState(0)) transmit(F("Act DrogueB\t"));

#endif // DualDeploy
#endif // DELAYED
	}
#endif // COMmode

#endif // PapgW

#if PbarT || PbarP || PaclX || PaclY || PaclZ || PgirX || PgirY || PgirZ || PmagX || PmagY || PmagZ || PapgW || PapgH || PapgP || PapgA || PapgS || PapgM || Pgps || Psep || Tcom || Lcom
	Serial.println();
#endif // PbarT || PbarP || PaclX || PaclY || PaclZ || PgirX || PgirY || PgirZ || PmagX || PmagY || PmagZ || PapgW || PapgH || PapgP || PapgA || PapgS || PapgM || Pgps || Psep || Tcom || Lcom

}
#endif // ((PRINT) || (PERF_Tcom_print))

//////////////////////////////////////////////////////SDC//////////////////////////////////////////////////////

#if SDCard
inline void SDSend()
{
	if (!SDC.util.mem)
	{
		if (SDC)
		{
			SDC.theFile.print(SDC.util.sinceBegin(), 3); SDC.tab();
#if USE_ACCEL
			for (short i = 0; i < 3; i++) { SDC.theFile.print(MM_accel[i], 3);	SDC.tab(); }
#endif // USE_ACCEL
#if USE_GYRO
			for (short i = 0; i < 3; i++) { SDC.theFile.print(MM_giro[i], 1);	SDC.tab(); }
#endif // USE_GYRO
#if USE_MAGN
			for (short i = 0; i < 3; i++) { SDC.theFile.print(MM_magn[i], 1);	SDC.tab(); }
#endif // USE_MAGN
#if USE_BARO
			for (short i = 0; i < 2; i++) { SDC.theFile.print(MM_baro[i]);		SDC.tab(); }
#if ApoGee
			SDC.theFile.print(apg.getAltitude()); SDC.tab();
#endif // ApoGee

#endif // USE_BARO

#if GPSmode
			if (GpS.isNew())
			{
				SDC.theFile.print(GpS.getLatitude(), 6);	SDC.tab(); //Latitude
				SDC.theFile.print(GpS.getLongitude(), 6);	SDC.tab(); //Longitude
				SDC.theFile.print(GpS.getAltitude());		SDC.tab(); //Altitude
				SDC.theFile.print(GpS.getMps());			SDC.tab(); //Velocidade
				SDC.theFile.print(GpS.getSatellites());		SDC.tab(); //Numero de satelites
				SDC.theFile.print(GpS.getPrecision());		SDC.tab(); //Precisao
			}
			else
			{
				SDC.tab();
				SDC.tab();
				SDC.tab();
				SDC.tab();
				SDC.tab();
				SDC.tab();
			}
#endif // GPSmode

#if ApoGee
			//if (apg.getApogeu(0.9, 0))
			if (Gutil.mem)
			{
				if (SDC.util.oneTime())
				{
					SDC.theFile.print(F("A:"));
					SDC.theFile.print(apg.getApgPt());
					SDC.theFile.print(F(" m\tT:"));
					SDC.theFile.print(apg.getApgTm());
					SDC.theFile.print(F(" s"));
					SDC.tab();
				}

				if ( rec.mainN.getState(0) ) SDC.theFile.print(F("Act MainN\t"));

#if DualDeploy
				if (rec.drogN.getState(0)) SDC.theFile.print(F("Act DrogueN\t"));
#endif // DualDeploy

#if DELAYED
				if (rec.mainB.getState(0)) SDC.theFile.print(F("Act MainB\t"));

#if DualDeploy
				if (rec.drogB.getState(0)) SDC.theFile.print(F("Act DrogueB\t"));
#endif // DualDeploy

#endif // DELAYED



			}
#endif // ApoGee
			SDC.theFile.println();
			SDC.close();
#if RBF || WUF || ForceSysC
			sysC++;
#endif // RBF || WUF || ForceSysC

		}
		else
		{
			SDC.util.mem = 1;
#if MORSE_MSG
			mensageiro.msgAux += " S";
#endif  // MORSE_MSG
		}
	}
	else if (SDC.util.eachT(15)) if (SDC.begin()) SDC.util.mem = 0;
}
#endif // SDCard

//////////////////////////////////////////////////////BZZ//////////////////////////////////////////////////////

#if BEEPING
inline void beep(unsigned int N)
{
	if (beeper.eachT(holdT*SYSTEM_n * 4) || beeper.oneTime())
	{
		beeper.mem = buzzCmd;
		beeper.counterReset();
		beeper.forT(holdT);
	}
	if (beeper.getCount() < (N + 1) * 2) if (!beeper.forT())
	{
		digitalWrite(buzzPin, beeper.mem);
		beeper.mem = !beeper.mem;
		beeper.counter();
		beeper.forT(holdT);
	}
}

inline void beep()
{
	digitalWrite(buzzPin, !buzzCmd);
	beeper.counterReset();
}
#endif // BEEPING

//////////////////////////////////////////////////////LRM//////////////////////////////////////////////////////

#if LoRamode
inline void LoRaSend()
{
	if (LRutil.eachT(LoRaDelay))
	{
		LoRa.println();
		LoRa.print(LRutil.counter());
		LoRa.print(F(":\t"));
		LoRa.print(LRutil.sinceBegin());
		LoRa.print('\t');
#if GPSmode
		LoRa.print(GpS.getLatitude(), 6);//Latitude
		LoRa.print('\t');
		LoRa.print(GpS.getLongitude(), 6);//Longitude
		LoRa.print('\t');
		LoRa.print(GpS.getHour());//Hora
		LoRa.print(':');
		LoRa.print(GpS.getMinute());//Minuto
		LoRa.print('\t');
		LoRa.print(GpS.getPrecision());//Precisao
		LoRa.print('\t');
#endif // GPSmode
#if ApoGee
		LoRa.print(apg.getAltitude());
		LoRa.print('\t');
		LoRa.print(apg.getSigma(), 3);
		LoRa.print('\t');
#endif // ApoGee
#if SDCard
		LoRa.print(!SDC.util.mem);
		LoRa.print('\t');
#endif // SDCard
#if ApoGee
		if (Gutil.mem)
		{
			LoRa.print(F("A:"));
			LoRa.print(apg.getApgPt());
			LoRa.print(F(" m\tT:"));
			LoRa.print(apg.getApgTm());
			LoRa.print(F(" s"));
			LoRa.print('\t');
		}
#endif // ApoGee
		//LRutil.oneTimeReset();
	}

#if ApoGee
	if (rec.mainN.getState(0)) LoRa.print(F("Act MainN\t"));

#if DualDeploy
	if (rec.drogN.getState(0)) LoRa.print(F("Act DrogueN\t"));
#endif // DualDeploy

#if DELAYED
	if (rec.mainB.getState(0)) LoRa.print(F("Act MainB\t"));
#if DualDeploy
	if (rec.drogB.getState(0)) LoRa.print(F("Act DrogueB\t"));
#endif // DualDeploy
#endif // DELAYED

#endif // ApoGee
}
#endif // LoRamode

//////////////////////////////////////////////////////COM//////////////////////////////////////////////////////

#if COMmode
template <typename T> void transmit(T message)
{
#if PRINT
	Serial.print(message);
#endif // PRINT
#if LoRamode
	LoRa.print(message);
#endif // LoRamode
}

template <typename T> void transmitln(T message)
{
#if PRINT
	Serial.println(message);
#endif // PRINT
#if LoRamode
	LoRa.println(message);
#endif // LoRamode
}

template <typename T, typename R> void transmit(T message, R value)
{
#if PRINT
	Serial.print(message, value);
#endif // PRINT
#if LoRamode
	LoRa.print(message, value);
#endif // LoRamode
}

template <typename T, typename R> void transmitln(T message, R value)
{
#if PRINT
	Serial.println(message, value);
#endif // PRINT
#if LoRamode
	LoRa.println(message, value);
#endif // LoRamode
}

#endif // COMmode

//////////////////////////////////////////////////////RET//////////////////////////////////////////////////////

inline void readEverything()
{
#if USE_BARO
	if (baro)
	{
		MM_baro[0] = baro.getTemperature();
		MM_baro[1] = baro.getPressure();
#if RBF || WUF || ForceSysC
		sysC++;
#endif // RBF || WUF || ForceSysC
	} else {
#if MORSE_MSG
		if(!mensageiro.getQuiet()) mensageiro.msgAux += " B";
#endif  // MORSE_MSG
	}
#endif // USE_BARO
#if USE_ACCEL
	if (accel)
	{
		MM_accel[0] = accel.getX();
		MM_accel[1] = accel.getY();
		MM_accel[2] = accel.getZ();
#if RBF || WUF || ForceSysC
		sysC++;
#endif // RBF || WUF || ForceSysC
	} else {
#if MORSE_MSG
		if(!mensageiro.getQuiet()) mensageiro.msgAux += " A";
#endif  // MORSE_MSG
	}
#endif // USE_ACCEL
#if USE_GYRO
	if (giro)
	{
		MM_giro[0] = giro.getX();
		MM_giro[1] = giro.getY();
		MM_giro[2] = giro.getZ();
#if RBF || WUF || ForceSysC
		sysC++;
#endif // RBF || WUF || ForceSysC
	} else {
#if MORSE_MSG
		if(!mensageiro.getQuiet()) mensageiro.msgAux += " G";
#endif  // MORSE_MSG
	}
#endif // USE_GYRO
#if USE_MAGN
	if (magn)
	{
		MM_magn[0] = magn.getX();
		MM_magn[1] = magn.getY();
		MM_magn[2] = magn.getZ();
#if RBF || WUF || ForceSysC
		sysC++;
#endif // RBF || WUF || ForceSysC
	} else {
#if MORSE_MSG
		if(!mensageiro.getQuiet()) mensageiro.msgAux += " M";
#endif  // MORSE_MSG
	}
#endif // USE_MAGN
#if GPSmode
	if (GpS) GpS.util.forT(10);
	if (GpS.util.forT()) {
#if RBF || WUF || ForceSysC
		sysC++;
#endif // RBF || WUF || ForceSysC
	} else {
#if MORSE_MSG
		if(!mensageiro.getQuiet()) mensageiro.msgAux += " L";
#endif  // MORSE_MSG
}

#endif // GPSmode
#if ApoGee && (RBF || WUF)
	if (rec.mainN.info()) {
		sysC++;
	} else {
#if MORSE_MSG
		if(!mensageiro.getQuiet()) mensageiro.msgAux += " Rmn";
#endif  // MORSE_MSG
	}

#if DualDeploy
	if (rec.drogN.info()) {
		sysC++;
	} else {
#if MORSE_MSG
		if(!mensageiro.getQuiet()) mensageiro.msgAux += " Rdn";
#endif  // MORSE_MSG
	}
#endif // DualDeploy


#if DELAYED
	if (rec.mainB.info()) {
		sysC++;
	} else {
#if MORSE_MSG
		if(!mensageiro.getQuiet()) mensageiro.msgAux += " Rmb";
#endif  // MORSE_MSG
	}

#if DualDeploy
	if (rec.drogB.info()) {
		sysC++;
	} else {
#if MORSE_MSG
		if(!mensageiro.getQuiet()) mensageiro.msgAux += " Rdb";
#endif  // MORSE_MSG
	}
#endif // DualDeploy

#endif // DELAYED

#endif // ApoGee && (RBF || WUF)
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////

#if 0
/*
 * ........................................................................  I8$$$????$?????????$??????$$?8+
 * ................................................................   $$$$?????????????????????????????????????$?$$
 * ............................................................ +?$???????????????????????????????????????????????????$$:
 * ........................................................ ?????????????????????$?$??$O???????$$$$????$?????????????????????
 * .................................................... $$????????????????$$?,           ?????$$           ,$$$??????????????$$$I
 * ................................................ ,$8?????????????$$,                  ?????$$                   $$$????????????$?
 * ............................................   $?????????????8                        ?????$$                        $?????????????$
 * ............................................8??$????????$$                            ?????$$                            $$?????????$??
 * ........................................ +8??????????$                                ?????$$                               :$?????????I$,
 * ....................................   $8?????????$                                   ??????$                                   $???????$?$?
 * .................................... $?????????$                              I$8$$????????$$????8$?+                             ,$????????$$
 * ................................   $????????$8                          88???????????????????????????????88:                         $$????????8
 * ................................ $???????$?,                      I$$???????????????????????$$$$????????????????+                      =?$????????
 * ............................   $?????$$?$                     $???????????????$?????????????,  $????????????????????$                     ?$$??????$
 * ............................ 8$???????$                   ?$????????$$???????????????    ???   ?$I$$???????????????????8+                   $??????$$?
 * ........................   =$$??????$                  $??????$$=      $???     $?$   $?  I?   ?   $?$I   $???????$$??$?$?$I                  $$?????$?,
 * ........................  $???????8                 I$???????$I  =8$,  $??  $?   $$  ???????      $??   8I  8?$$   ?????????$?~                 8????????
 * ........................$$$??????                 8$???????????   8,  :$?$  ??$  $$   $?  ~?   $   $$       ~?     $???????????I8                 ????????I
 * ....................   $???????:               ?$??????????????:        ??       ??$I    8?$  I?I  I$  8?$8?$?8  ~ ???????$:8????$$~               +$?$????8
 * .................... ~??????$$               $????$8+ 8????????8   ?$    I$$??$$$????????????????????$~    =?$   $????????I   ~$????$+               8??????$
 * ....................$?????????$+           $$?????     $?$???????  ????$????????????$?????????$??????????????$   $???????:   ,  :$?????+            $?????????$
 * ................   $????????????$        =$???$?$  $$???$$??????$ ?$?????$????$$$$I,           :?$$$????$?????$? 8??????~   ??8  +??????$,        8????????????$
 * ................  ??????????????$?8     ?$$?????   $?$??  $?????$????????$I                             I$??????$$$????,   $?$   +????????$     =$???????????????
 * ................,$?????$  $?????????  8??????????   $??8  $?????????$$=                                     I8????????8   ?$??   $?????????$?  8$????????+~$??????
 * ............  ?$?????$     $??????????$??    $??        ,$??????$?                                             $???????$       ?$$$8????????$$????????8    ???????,
 * ............  ???????$       ???????????I     ?8$?8     $$???$?,                                                   +$?????8$,:$?8      $??????????????      ,???????
 * ............,8?????$O          O?????$8   $$,   ,+?????????$~                                                         I???$?????    $$  ???????????$          ??????$=
 * ............+??????8            =?????$      $$   ?????$??                                                               ???????  ?O    $????????$I            ???????
 * ........   ???????$            8????????,   ,$?  8????$$                                                                   $????$   8? 8?$$$???????$            8?????$
 * ........   $?????$            I$?????????$      ?$???$ ,                                                                     $?????~ =$?I   ,$??????$            $???$?$
 * ........  ???????            $?$?$  ??????$=  8????$                                    $8:                                    $????$? ?$  ?  ???????$            $?????$
 * ........ $?????$            $???8         8$$$???$:                                    :O88~                                    $$????, $=  8 $???$???$            $?????$
 * ........$$????$            $????I   $I~    $$???8                 8                    O8888                          =           8???$  :  ????$  ????$            $?????8
 * ....   I??????            8??????$   8  $?8???$,                 OO                   ?888888                        ,8            ?$???8  ?$?+  8 $$???$           ,??????
 * ....   ?????$~           $???~=????    $$?????,                  + O                  8888888                       ?888~           +?$???I$~    ?$??????I           ??????$
 * ....  ???????           $???8  $??I?   ??????                                        =88888888                       888              ?$??$    ????????????           ??????8
 * .... ~?????$           ,???$  $$  8?$  ?$??8                                         88888888O                                         ?????I??$    $??????            $?????
 * .... ??????:           $??$   I  ?$???$????                                          888888888                                          $???$8       $?????$           ??????$
 * ....$??????           $???$      ?$$?????8                                           888888888                                           $?  $  ??$ +,??????$           $?????+
 * ....$?????           ???????$?      ???$8                                            888888888,                                           8? $?~ ,    ???????           ?$$???$
 *    ?$????$           $??$ 8$$???? ,+???$                                             888888888~                                            ?,       $????????$           $$????,
 *    ??????           ????      ~????????            ~O                                888888888?                                             $= , $???$  ??????$          ,$????$
 *   $??????$?         ????$$=     ,????$                                               888888888?         =O                                  ????$I      ???????         $$??????:
 *   ??????????$      $?$????$?$$~ ,$?$??                                               888888888?                                              $????  ,$?  ??????$     ~$??????????
 *   $????????????$   ??$?  ?$???8  ????                                                888888888?                                               $??$$??$:  ??????$  :$?????????????
 *  $???????????????$$???          ????=                                                888888888$                                               $??$I      $??????$$???????????????:
 *  $????????????????????$$$      +????                                  OO             888888888$                          =                     ???$   8$$??????????????????:?????$
 *  $????$ $???????????????????$??????8                                                 888888888$                        8888=                   $??????????????????????$$    ?????$
 * I??????    $$??????????????????????                                                  888888888$                         OO?                     ????????????????????$~      $?????
 * $?????       :$$?$????????????????$                                                  888888888$                                                 $?????????????????I         +??????
 * ??????           ?????????????????,                                                  8888,$888$                                                 $?????????????????           ?????$
 * ?????$          +????????????????$                                                 ? 8888 8888$$                                                 ?????????????????           ??????
 * ??????          $????????????????$                                                 8,8888 8888$8?                                                ?????????????????=          $????$
 * ?????8          $????????????????$                                                88:8888 8888$88:                                               $????????????????$          8????$
 * ?????$          $????????????????=                                               888:8888 8888$888                                               $?????????????????          $?????,
 * ?????I          ?$???????????????                                               ,888:8888 8888$8888                                              +????????????????$          ?????$+
 * ??????          ?????????????????                  :O8                          8888:8888 $888$88888                              ,,             =????????????????$          $????$I
 * ??????          ?????????????????                                              88888:8888 8888$88888                             O$:             ,$???????????????$          $??????
 * ??????          ?????????????????                                              88888:8888 8888$88888            8               $??              +????????????????$          $????$$
 * ??????          $$???????????????                                              88888 O888 $888 I8888          I8?                                =$????????????????          $????$+
 * ?????$          $????????????????~                                             888O ,? ~8,$+ :: $888                                             $?????????????????          $????$,
 * $????$          ?$??????????????$?                                             888, 888$$~88888: $88                                             $????????????????$          $?????
 * ?????$          $????????????????$                                             88?  88888?88888O ,88                                             ?????????????????+          $?????
 * ?????$          +$???????????????$                                             88   88888$88888+  ?8                                             ?????????????????           ??????
 * $?????           $????????????????                                             8    ~8888888888,   $                                            I????????????????$           ?????$
 * $?????           $????????????????8                                                 ,O8888888O$                                                 ?????????????????$          I??????
 * I??????$?$8      $?????????????????          ,$,$                                    8,O88$$==O                                                 ?????????????????$    +$?$????????
 *  ?????????$??$?$? ????????????????$8         888,               +?                  8I$88888 $O                                                ???????????????????$$?$???????????$
 *  ?$?????????????????????????????????           ,                                   8,?? 888:=?+?                       :O$                     $?????????????????????????????????$
 *  $??????????????????????????????????~                                              $$?$$$8O?8?$$                       O8OI                   $?????????????????????????????????$=
 *   ??????+$8$?????????????????????????                                              $????$$888 8$?                       ?                     ?????????????????????$??$$$  $?????
 *   ?????$,     ???$???????????????????8                                             $????$?8$$???I                                            8$?????????????????$$I        ??????
 *   $?????$           ??????????????????                                             $????$I ?????$                                           ~??????????????????           $?????=
 *    ??????           $?????????????????$                                            $????~I$?????$                                          ,$?????????????????$           ??????
 *    $$????8           $??????????????????                                           ??????????????                                          $?????????????????$           $?????=
 * ....$?????           ?$?????????????????$                                         :?$????????????                                         $??????????????????:          =?????$
 * ....$?????$           $??????????????????$                                        ?$?????????????:                                       ???????????????????$           $??????
 * .... ??????            ????????????????????                                       ???????????????$                                      $???????????????????           ?????$$
 * .... +?????$           =???????????????????8                                      ???????????????$                                     $??????????????????$            $????$
 * ....  ??????8           $$??????????????????$                                    $???????????????$~                                   $????????????????????           $?????$
 * ....   $$???$            ?????????????????????                                   $?????????????????                                  $???????????????????$           I?????$
 * ....   ?$???$?            $???????????????????$                                 +??????????????????                                ,????????????????????$           ,$?????~
 * ........8?????$            $???????????????????$$                               $??????????????????$                              $?$??????????????????$            ??????$
 * ........ $?????$            $????????????????????$                             $?????????????????????                           ~?????????????????????$            $?????$
 * ........  ??????8            ?????????????????????$8                          ???????????????????????                          $$????????????????????$            $?????$
 * ........  ,$????$$            $???????????????8??????$                       +??????????????????????$$                       ?$?????????????????????$$$$$$$$$$???$??????
 * ........   ????????????????????????????????$$,  +$?????8                    8?????????????????????????$                    $?????????$  $??????????????????????????????=
 * ............?$?????????????????????????????8  ,?  ?$?????$                 $????????????????????????????$                $?????????? ,$  ? ???????????????????????????,
 * ............ 8???????????????????????????$     ?  $$???????$$           ,$??????????????????????????????$??~         ????????????$~~+8 $? 8$??????????????????????????
 * ............  I$?????????????????????????$:+$$?, 8$??????????$?$$?$$$?$???$???????????????????????????????????????$??$?????????$?$ $??  :??$???$             $??????~
 * ............   8??????$             ~?????????$$  8 $$??????????????????????????????????????????????????????????????????????,8?+  ,??$$??????$              $$?????+
 * ................=???????              $???????? ,I : ?+$$???????????????????????????????????????????????????????????????????  8$$?  $???????$              $?????$
 * ................ ,???????              :$?????$$ $?:OI ?$$????????????????????????????????????????????????????????$I?????$  $  ??:I8??????$              +???????:
 * ................  ,?$?????$              8$??????$ $~ ~$::$??$+  $???????????????????????????????????????????????8   $??$ 8+I$   8??????8=              $??????$
 * ....................???????$               8$??????$ +???????  ? $????????????????????????????????????????????$??$ :   $$=:$  ?????????$              ,$??????8
 * .................... ??????$??               8??????I$????$  ,?+ $?????????????????????????????????????????$  ???$  ?$  =$  ?$???????$               8??????$~
 * ....................   $????$??                ?$????????   ?,   $?   ???????????????????????????$?  $????$?  $??$    $~ :$$$?????$I                ???????$ ,
 * ........................8???????$                ~$???????$$??$: $$  88$    8???$????????????????$    $?$  O$ ???$  $??$???????$$                 $???????8
 * ........................  ????????$                 $I?????????$ $ 8$ $= $$  $  I +$  8 ??   ?$??8 ??  $?  ??  $?? 8???????????$$$?             $???????$
 * ........................   ?????????I            =$??$I$$?????????$$:?$  ?8  ?     $  I??8$$ =???       ?$   ?=$???????????????????$$?        $????????+
 * ............................ $$$?????$?        $????$$?$$$8?$?????????$ $$ ??$ ,$$I$ :$?$ ?$ ~??$  $$?? ,$????????????$8$ $????????????$?   $???????$$
 * ............................   $$???????I   $???????????,    ~??$$????  $??????$$$$$+???$~ ? ,$?$?$????????????????$$,      ,$I????????????????????8
 * ................................ $???????????????????8           :8$$??????????????????????????????????????????$$              ~$?????????????????
 * ................................   8???????????????:                 $=?$$???????????????????????????????????$$                   ?$???????????$
 * ....................................+$??????????$                   $??$?$?? ?8$??????????????????$88=  ?$??????                   8??????????
 * ....................................   $??????????I                ????????+           $$$????          ,8?????$$               $?????????$$
 * ........................................ $$?????????$$            8??????$+            $?????$            ?$?????$           $$??????$?$$?
 * ............................................$??????????$$+       $??????$$             ??????$             $?????$$      I$???????????$
 * ............................................  =??$?$????????$=  ????????8              ???????,             $??????$ I$???????????$$
 * ................................................ ?$$?$??????????????????               ???????+             ,??????????????????$?:
 * .................................................... $$???????????????$?$,             ???????$          ,$$????????????????$$
 * ........................................................:$????????????????$?????$$?$$I=$??????$$$$$?$???$???????????????$$,
 * ............................................................ $$?????????????????????????????????????????????????????$$
 * ................................................................  ?$??????????????????????????????????????????$8=
 * ........................................................................ ?8$????????????????????????????8~
 * ................................................................................   ,,+++??$+++,
 */
#endif
